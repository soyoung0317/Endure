Q. TCP 연결 시 3-way 핸드쉐이크 과정에 대해 설명하시오.

Q. 4-way Handshake에 대해 설명하시오.

-------------------------------------------------

Q. TCP 연결 시 3-way 핸드쉐이크 과정에 대해 설명하시오.
A.	
	1. 정의
		TCP 연결 시 3-way 핸드쉐이크는 클라이언트와 서버 간에 신뢰성 있는 연결을 설정하기 위한 절차입니다. 
		이 과정을 통해 양측은 서로의 시퀀스 번호를 동기화하고, 데이터 전송 전에 연결이 정상적으로 구성되었음을 확인할 수 있습니다.

	2. 단계별 과정
		(1) SYN (Synchronize) - 클라이언트 → 서버
			클라이언트가 서버에 연결 요청을 보내면서 SYN 플래그가 설정된 패킷을 보냅니다.
			이때 클라이언트는 초기 시퀀스 번호(Sequence Number)를 함께 보냅니다.
			(연결 요청 및 초기 시퀀스 번호 전송)
			
		(2) SYN-ACK (Synchronize-Acknowledge) - 서버 → 클라이언트
			서버는 클라이언트의 SYN을 받고, 자신의 SYN 플래그와 함께 ACK 플래그도 설정한 패킷을 클라이언트에게 보냅니다. 
			이 패킷에는 서버의 초기 시퀀스 번호와 클라이언트 시퀀스 번호에 대한 응답(ACK 번호)이 포함됩니다.

		(3) ACK (Acknowledge) - 클라이언트 → 서버
			클라이언트가 서버로부터 SYN-ACK를 받으면, ACK 플래그가 설정된 패킷을 서버로 보내 연결 완료를 알립니다. 
			이후 양쪽 모두 연결이 설정되어 데이터 통신이 가능합니다

	3. 왜 이 과정을 사용하는가
		a. 신뢰성 확보 : 3-way 핸드쉐이크 과정을 통해 연결의 양쪽이 모두 준비되었음을 확인할 수 있으며, 
				데이터 전송 전 초기 시퀀스 번호를 동기화함으로써 패킷의 순서 및 무결성을 유지할 수 있습니다.
		b. 연결 상태 관리 : 이 과정을 통해 클라이언트와 서버는 서로의 존재와 통신 가능 상태를 확인하므로, 
			이후 발생할 수 있는 네트워크 오류나 혼선에 대비할 수 있습니다.

	4. 연결 실패 시 처리 방법
		핸드쉐이크 과정 중 어느 한 단계에서 응답이 없거나 오류가 발생하면, 
		클라이언트는 재전송하거나 연결 실패를 판단하여 적절한 예외 처리를 수행합니다

-------------------------------------------------

Q. 4-way Handshake에 대해 설명하시오.
A.
	1. 정의 

	2. 단계별 과정
		(1) FIN (Finish)
			연결을 종료하려는 쪽(예: 클라이언트)이 서버에게 FIN 플래그가 설정된 패킷을 보냅니다.
			이때 클라이언트는 FIN_WAIT 상태가 된다.
			
		(2) ACK (Acknowledgment)
			서버는 클라이언트의 FIN 패킷을 받고, 이에 대한 확인 응답으로 ACK 패킷을 클라이언트에게 보냅니다.
			그리고 나서 데이터를 모두 보낼 때까지 잠깐 TIME_OUT이 된다. 이때 서버는 CLOSE_WAIT 상태가 된다.
			
		(3) FIN (Finish)
			서버도 연결 종료 준비가 되면, 클라이언트에게 자신의 FIN 패킷을 보냅니다.
			이때 서버는 LAST_ACK 상태가 된다.
			
		(4) ACK (Acknowledgment)
			클라이언트가 서버의 FIN을 받고, 확인 응답으로 ACK 패킷을 서버에게 보냅니다.
			서버는 ACK 메세지를 받고 소킷 연결을 CLOSE한다.
			클라이언트는 아직 서버로부터 받지 못한 데이터가 있을 것을 대비해 일정 시간동안 세션을 남겨놓고 잉여 패킷을 기다린다(TIME_WAIT).

	3. TIME_WAIT
		서버에서 FIN을 전송하기 전에 전송한 패킷이 Routing 지연이나 패킷 유실로 인한 재전송 등으로 인해 
		FIN 패킷보다 늦게 도착하는 상황이 발생한다면 어떻게 될까? 
		만약 클라이언트는 FIN을 받고 세션을 종료한다면 뒤늦게 도착하는 패킷은 Drop되고 데이터는 유실될 것이다.
		
		클라이언트는 이러한 현상에 대비하여 서버로부터 FIN을 수신하더라도 일정시간(default 240초)동안 세션을 남겨놓고 잉여 패킷을 기다린다. 
		이 과정을 TIME_WAIT라고 부른다. 일정시간이 지나면, 세션을 만료하고 연결을 종료시키며, CLOSE 상태로 변화한다.

	4. 그외
		4단계로 끊는 이유는 TCP가 양방향 스트림 통신이라서, 각 방향별로 독립적으로 연결을 종료해야 하기 때문입니다.
		한쪽이 먼저 종료해도 상대는 아직 데이터를 보낼 수 있으므로, 서로 FIN-ACK 교환을 거쳐 안전하게 종료합니다.
		FIN을 보낸 쪽은 TIME_WAIT 상태가 되어 일정 시간 동안 연결 상태를 유지하며, 늦게 도착하는 패킷을 처리합니다.

-------------------------------------------------