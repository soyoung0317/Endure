Q. 디퓨즈, 노말, 스펙큘러 텍스쳐에 대해 설명히시오.

Q. 노말맵핑에 대해 설명하시오 

-------------------------------------------------

Q. Diffuse, Normal, Specular 텍스쳐에 대해 설명히시오.
A.
	1. Diffuse 텍스쳐
		Diffuse 텍스쳐는 3D 모델의 표면에 적용되는 기본적인 색상 정보를 담고 있는 텍스쳐입니다. 이는 모델의 기본 색상을 결정하며, 표면의 외관을 정의합니다.
		일반적으로 Diffuse 텍스쳐는 모델의 적절한 색상과 패턴을 나타내며, 빛과 그림자의 효과는 포함되지 않습니다. 
		
		(1) 특징
			표면의 기본 색상 정보 제공
			조명의 영향을 받지 않으며, 표면의 색을 직접 표현
			텍스처 맵의 가장 기본적인 형태

		(2) 용도
			모델의 기본 색상을 표현하는 데 사용
			모델의 재질이나 패턴을 구현할 때 사용
		
	2. Normal 텍스쳐
		Normal 텍스쳐는 모델의 표면에 세부적인 표면의 거칠기나 디테일을 추가하는 텍스쳐입니다.
		이 텍스쳐는 표면의 법선 벡터를 변형시켜, 표면이 실제로 굴곡져 있지 않아도 빛과 그림자의 반사를 세밀하게 제어합니다. 주로 법선 맵(Normal Map) 이라고도 불립니다.
		Normal 텍스쳐는 RGB 채널을 사용하여 각각의 축(X, Y, Z) 에 대한 법선 벡터 방향을 지정하고, 표면의 질감을 사실적으로 표현합니다.
	
		(1) 특징
			법선 벡터의 변형을 통해 표면 디테일을 추가
			조명 반응을 더 사실적으로 만들어, 실제 기하학적 변화 없이 표면을 세밀하게 표현
			표면의 미세한 굴곡, 홈, 주름 등을 묘사

		(2) 용도
			세부적인 표면 질감을 추가하는 데 사용
			표면의 미세한 변형을 표현하여 사실적인 질감을 구현

	3. Specular 텍스쳐
		Specular 텍스쳐는 표면의 반사광 특성을 정의하는 텍스쳐입니다. 이 텍스쳐는 빛이 표면에 반사되는 정도와 표면의 광택도를 결정합니다.
		Specular Map은 표면이 광택이 있는지, 반사율이 높은지를 정의하며, 하이라이트의 강도와 반사광의 색상을 조절할 수 있습니다.
		일반적으로 흰색은 높은 반사율을 의미하고, 검은색은 반사율이 없는 표면을 나타냅니다.
		
		(1) 특징
			표면의 반사광 및 광택도 조절
			광택이 있는 표면에 하이라이트를 추가하고, 반사광을 생성
			표면이 반사하는 빛의 색상도 설정할 수 있음

		(2) 용도
			반사광을 묘사하여 광택 있는 표면을 표현
			하이라이트와 반사 효과를 조정하는 데 사용

		(3) 예시
			금속, 물, 유리와 같은 반사광이 강한 표면

-------------------------------------------------

Q. 노말맵핑에 대해 설명하시오 
A.	
	표면의 법선(Normal)의 벡터를 조작하여 시각적으로 디테일한 표현을 추가합니다.
	
	Normal Vector : 표면의 수직 방향을 나타 내고 있습니다.
	Tangent Vector : 표면의 수평 방향을 나타 내고 있습니다.
	Binormal(Bitangent라고도 함) Vector : 법선과 접선 벡터에 수직인 벡터를 나타 내고 있습니다.

	1. 노멀 맵에서 벡터 추출
		노멀 맵에서 벡터는 각 텍스처의 픽셀(RGB)을 통해 나타납니다. 
		각 색상 값은 3D 법선 벡터의 X, Y, Z 좌표를 나타내며, 보통 RGB 값이 [0, 255] 범위로 주어집니다. 
		이 값을 [-1, 1] 범위로 변환하여 사용합니다. 
		예를 들어, R, G, B가 각각 255일 때, 해당 법선 벡터는 (1, 1, 1)이 됩니다.
		이렇게 추출된 벡터는 기본적으로 모델의 로컬 좌표계(Local space)에서 정의됩니다.

	2. 좌표계 변환
		실제 렌더링에서 추출된 법선 벡터는 모델의 로컬 좌표계에서 월드 좌표계(World space) 나 뷰 좌표계(View space)로 변환되어야 합니다. 

	3. Tangent, Binormal, Normal Space 변환
		- 탄젠트 공간(Tangent Space): 모델의 각 표면이 고유한 좌표계를 가지고 있다는 개념으로, 
			각 픽셀마다 탱전트 벡터(Tangent), 비노말 벡터(Binormal), 노멀 벡터(Normal)의 3개의 벡터가 조합되어 탄젠트 공간을 형성합니다.

		: TBN 행렬을 생성합니다. (tangent, binormal, normal )
		
		vs_main()
		Out.vNormal     = normalize(mul(vNormal, g_WorldMatrix));
		Out.vTangent    = normalize(mul(float4(In.vTangent, 0.f), g_WorldMatrix));
		Out.vBinormal   = normalize(vector(cross(Out.vNormal.xyz, Out.vTangent.xyz), 0.f));

		ps_main()
		float3x3 matTBN = float3x3(In.vTangent.xyz, In.vBinormal.xyz, In.vNormal.xyz);
		float3 vPixelNormal = g_NormalTexture.Sample(LinearSampler, In.vTexcoord).xyz;
		vPixelNormal = mul(vPixelNormal, matTBN);
		Out.vNormal = vector(vPixelNormal * 0.5f + 0.5f, 0.f);