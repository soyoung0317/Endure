Q. 셰이더란?

Q. Compute Shader에 대해 설명하시오. 
-------------------------------------------------
Q. 셰이더란?
A.  
	1. 정의
		3D 그래픽의 렌더링 과정에서 각 픽셀, 정점, 또는 삼각형을 처리하는 역할을 한다.
		즉, 셰이더는 그래픽 카드에서 실행되는 코드이며, 그래픽 효과를 조작하는 핵심적인 역할을 한다.
		
	2. 셰이더의 역할
		정점(Vertex) 및 픽셀(Pixel)의 색상, 위치, 조명 등을 계산
		3D 모델을 화면에 렌더링하는 과정에서 다양한 그래픽 효과 적용 가능
		GPU에서 실행되므로 병렬 연산(Parallel Processing) 최적화 가능
		
	3. 주요 셰이더 종류
		셰이더는 렌더링 파이프라인(Rendering Pipeline)에서 특정 역할을 수행하는데, 대표적으로 다음과 같은 셰이더가 있다.
		
			셰이더 종류											역할
		정점 셰이더 (Vertex Shader)						정점(Vertex)의 위치 변환 (월드 → 클립 좌표)
		픽셀 셰이더 (Pixel Shader / Fragment Shader)		각 픽셀의 색상을 계산
		지오메트리 셰이더 (Geometry Shader)				정점을 추가하거나 제거하여 새로운 기하학적 형태 생성
		테셀레이션 셰이더 (Tessellation Shader)			정점을 세분화하여 더 세밀한 곡면 표현
		컴퓨트 셰이더 (Compute Shader)					일반적인 그래픽 처리 외의 계산 작업 수행
		
-------------------------------------------------
		
Q. Compute Shader에 대해 설명하시오. 
A.
	1. 정의
		GPU의 병렬 처리 능력을 이용하여 복잡한 수학 연산을 수행하도록 설계된 프로그램

	2. 왜 사용하는가?
		- 병렬 연산 최적화: Compute Shader는 GPU의 병렬 처리 능력을 활용하여 대규모 데이터 처리를 효율적으로 할 수 있다. 
				CPU보다 훨씬 많은 연산을 동시에 처리할 수 있어 대규모 계산을 빠르게 수행할 수 있다.
		- 그래픽 외의 연산 처리: Compute Shader는 그래픽 렌더링 외에도 물리 연산, 이미지 처리, 머신 러닝 등의 분야에서 유용하다.
		- 그래픽 파이프라인과 분리된 연산: 기존의 픽셀 셰이더나 버텍스 셰이더는 그래픽 렌더링 파이프라인 내에서 실행되지만, 
				Compute Shader는 그래픽 파이프라인과 독립적으로 실행되어 다양한 연산을 처리할 수 있다.

	3. Compute Shader의 사용 분야
		- 이미지 처리: 필터링, 블러, 엣지 감지, 색상 조정 등 다양한 이미지 처리 작업을 GPU에서 병렬로 처리.
		- 물리 연산: 물리 엔진에서의 계산, 예를 들어 유체 시뮬레이션, 충돌 감지, 입자 시스템 등.
		- 머신 러닝: GPU를 이용하여 딥러닝 모델 학습 및 데이터 전처리를 GPU에서 병렬로 수행.
		- 게임 개발: 예를 들어, 텍스처 생성이나 광원 계산 같은 비그래픽 연산을 병렬 처리하여 성능을 최적화.
		- 과학 연산: 대규모 시뮬레이션, 데이터 분석, 암호화 등의 복잡한 계산 작업을 GPU에서 처리.

-------------------------------------------------