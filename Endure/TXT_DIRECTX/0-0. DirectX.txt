Q. DirectX와 OpenGL에 대해 설명하시오 

Q. DirectX와 OpenGL 중 게임 개발에서 더 적합한 것은 무엇인가?

Q. Direct3D 9과 Direct3D 11의 차이점에 대해 설명하시오.

-------------------------------------------------

Q. DirectX와 OpenGL에 대해 설명하시오 
A. 
	1. . 정의
		- DirectX: 마이크로소프트에서 개발한 멀티미디어 API 모음으로, 그래픽, 오디오, 입력 장치, 네트워크 등을 관리하는 기능을 제공한다.
		- OpenGL: 크로스플랫폼 그래픽 API로, GPU를 활용하여 2D 및 3D 그래픽을 렌더링하는 표준 API이다. 

	2. 왜 사용하는가?
		- DirectX
			Windows 환경에서 최적화된 성능을 제공하며, 마이크로소프트의 공식 지원을 받는다.
			최신 DirectX 버전(예: DirectX 12)은 CPU와 GPU의 효율적인 병렬 처리를 지원하여 성능 향상을 도모한다.
		- OpenGL
			플랫폼 독립적으로 동작하기 때문에 다양한 운영체제에서 사용 가능하다.
			게임뿐만 아니라 CAD, 시뮬레이션, 과학 시각화 등의 분야에서도 활용된다.
			비교적 쉬운 API 설계로 인해 그래픽 프로그래밍을 배우기에 적합하다.


-------------------------------------------------

Q. DirectX와 OpenGL 중 게임 개발에서 더 적합한 것은 무엇인가?
A. 플랫폼에 따라 다르다. Windows 및 Xbox 게임이라면 DirectX가 유리하고, 크로스플랫폼을 고려한다면 OpenGL이 적합하다.

-------------------------------------------------

Q. Direct3D 9과 Direct3D 11의 차이점에 대해 설명하시오.
A.
	1. 정의
		- Direct3D 9: 고정 기능 파이프라인(Fixed-Function Pipeline)을 지원하는 3D 그래픽 API이다. 
		- Direct3D 11: 프로그래머블 파이프라인(Shader-based Pipeline)을 중심으로 설계되었으며, 
				최신 하드웨어의 성능을 활용할 수 있는 다양한 기능(멀티스레드 렌더링, Compute Shader 등)을 포함한다.

	2. 왜 Direct3D 11을 사용하는가?
		(1) Direct3D 10은 멀티스레드 렌더링을 지원하지 않지만, Direct3D 11에서는 가능하다.
		(2) Direct3D 11은 Compute Shader와 테셀레이션을 지원하여 GPU 활용도가 높아졌다.
		(3) 파이프라인 
			Direct3D 9과 Direct3D 11의 가장 큰 차이점 중 하나는 그래픽 파이프라인의 구조이다.

			- Direct3D 9 (고정 기능 기반 & 제한적인 프로그래머블 셰이더)
				★ Fixed-Function Pipeline(고정 기능 파이프라인) 중심. 
				= 개발자가 직접 세부적인 그래픽 연산을 제어하기 어렵고, 주어진 기능만 사용 가능.
				Vertex Shader, Pixel Shader만 지원 (Shader Model 2.0~3.0).
				셰이더 활용이 제한적이어서, 정교한 그래픽 효과를 구현하는 데 한계가 있음.
			- Direct3D 11 (완전한 프로그래머블 파이프라인 지원)	
				★ 완전한 Programmable Pipeline 구조로 모든 렌더링 과정을 직접 제어 가능.
				추가된 셰이더 단계: Geometry Shader, Hull Shader, Domain Shader, Compute Shader.
				테셀레이션(Tessellation) 지원으로 더욱 정밀한 모델 표현 가능.
				★ 멀티스레드 렌더링 지원으로 CPU 부하 감소.
		
-------------------------------------------------