Q. 조명연산에 대해 설명하시오.

Q. 조명 연산을 최적화하는 방법에 대해 설명하시오 

-------------------------------------------------

Q. 조명연산에 대해 설명하시오.
A.
	1. 정의
		조명 연산은 빛의 출발지점(광원)에서 물체의 표면으로 전달되는 빛의 양과 방향을 계산하여, 
		최종적으로 화면에 그려지는 물체의 색상, 밝기 등을 결정하는 과정입니다. 
	
	2. . 주요 조명 모델
		- Lambertian Lighting 
		 : 표면이 빛을 균등하게 반사한다고 가정합니다. 
		 주로 디퓨즈 반사를 계산할 때 사용되며, 표면의 법선 벡터와 광선 벡터의 내적을 기반으로 합니다. 주로 평면적인 물체에 적합합니다.
			반사된 빛 = 조명 세기 × 법선 벡터 · 광선 벡터
		
		- Phong Lighting
		: Phong 모델은 디퓨즈 반사와 스페큘러 반사를 모두 고려합니다. 
		반사된 빛을 계산할 때, 빛이 표면에 닿은 후 반사된 방향과 관찰자(뷰어)의 위치를 기준으로 스페큘러 반사를 추가적으로 계산합니다.
			반사된 빛 = 디퓨즈 반사 + 스페큘러 반사
		
		- Blinn-Phong Lighting
		: Phong 모델의 수정된 형태로, 계산 효율성을 높이기 위해 뷰어 벡터와 반사 벡터의 반사 벡터와의 내적을 사용하는 모델입니다.

	3. 장점과 단점
			- 장점:
			현실감 있는 렌더링: 물체의 표면 질감과 광원의 영향을 실제처럼 표현할 수 있어 시각적으로 더 자연스러워집니다.
			효율적인 최적화: 다양한 모델과 알고리즘을 통해 성능을 최적화할 수 있습니다.
			
			- 단점:
			연산량: 복잡한 조명 연산은 계산 비용이 크고, 성능에 부정적인 영향을 미칠 수 있습니다.
			리얼타임 적용의 어려움: 특히 동적인 씬이나 복잡한 조명 효과에서는 실시간 렌더링이 어려워질 수 있습니다.
			
-------------------------------------------------

Q. 조명 연산을 최적화하는 방법에 대해 설명하시오 
A.
	1. 쉐도우 맵 최적화
		: 그림자 계산을 최적화하려면 그림자가 필요한 영역만 처리하거나 그림자 맵의 해상도를 조정하여 성능을 향상시킬 수 있습니다.

	2. 물리 기반 조명(PBR) 사용
		: PBR은 실시간 렌더링에서 더 효율적으로 조명을 계산할 수 있게 돕는 기법으로, 고정된 규칙을 사용하여 계산을 간소화할 수 있습니다.

	3. LOD(Level of Detail)
		: 물체의 거리에 따라 세부 정보를 줄여 렌더링 성능을 높입니다.
		
-------------------------------------------------