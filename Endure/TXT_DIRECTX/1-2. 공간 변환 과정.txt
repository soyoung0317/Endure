Q. 공간 변환 순서를 정리하고 과정을 설명하시오

Q. 4X4 행렬을 사용하는 이유는?

-------------------------------------------------

Q. 공간 변환 순서를 정리하고 과정을 설명하시오
A.
	1. 공간 변환 순서 정리
		월드 좌표계 (World Space) → 객체의 원래 좌표
		뷰 좌표계 (View Space) → 카메라 기준으로 변환된 좌표
		클리핑 좌표계 (Clipping Space) → 투영 행렬 적용 후, 뷰잉 볼륨 내의 좌표
		정규 장치 좌표계 (NDC, Normalized Device Coordinates) → -1 ~ 1 범위로 정규화
		스크린 좌표계 (Screen Space) → 화면 픽셀 좌표로 변환

	2. 과정 설명
		1) 로컬 스페이스 -> 월드 스페이스 
			각 오브젝트마다 자신의 피벗위치를 원점(0, 0, 0)으로 하는 좌표공간을 갖는다. 
			3D 공간내의 월드공간은 단하나의 위치를 원점으로 하는 좌표 공간을 가지고 있습니다.
			오브젝트의 좌표공간을 변환하여 하나의 월드공간에 통합하는 과정을 월드 변환이라고 한다. 
			크기 * 자전 * 이동 * 공전 * 부모 = 물체를 월드좌표에 배치할때 행렬을 연산하는 순서. / 변환행렬

		2) 월드 스페이스 -> 뷰 스페이스 
			월드 공간으로 변환된 정점들을 카메라가 보는 시점으로 보기위한 변환
			카메라 위치가 원점(0, 0, 0)이고 바라보는 방향을 +z축으로 변환한다. 
			카메라를 해당 위치에 존재하기 위해 정점에 카메라의 역행렬을 곱한다. 

		3) 뷰 스페이스	-> 클리핑 스페이스 
			카메라 좌표계에서 3D 공간을 2D 화면으로 투영해야 하기 때문이다.
			이 과정에서 투영 변환(Projection Transformation)을 적용하여 3D 좌표를 클리핑 좌표계로 변환
			near, far, fov를 통해 투영행렬을 만들고 투영 변환(Projection Matrix)을 이용
			X, Y 는 (-1, 1)범위이고 Z좌표는 (0, 1)범위에 존재한다. 
			클리핑 스페이스의 원점(0,0,0) 은 X와 Y는 화면 중심, Z는 Near Plane에 위치한다.

		4) 클리핑 스페이스 -> NDC Space
			클리핑 스페이스에서 w로 나누어 좌표를 -1 ~ 1 범위로 정규화하는 과정. = 원근 나눗셈(Perspective Division) 이라고 한다.
			좌표계의 원점은 정중앙
			X(ndc) = X(clip) / w(clip),  -1 ~ 1
			Y(ndc) = Y(clip) / w(clip),  -1 ~ 1
			Z(ndc) = Z(clip) / w(clip),	0 ~ 1

		5) NDC Space -> 스크린 스페이스 
			뷰포트 변환(Viewport Transform)"을 통해 스크린 좌표로 변환됨.
			NDC 좌표를 실제 화면 픽셀 좌표로 변환하는 과정.
			실제 화면(모니터, 윈도우)에서 픽셀로 변환된 좌표.
			보통 (0,0) 이 좌상단 에 위치. (DirectX기준임)
			해상도(예: 1920x1080)에 맞게 조정됨.

-------------------------------------------------

Q. 4X4 행렬을 사용하는 이유는?
A. 행렬은 위치와 무관하게 오직 방향과 크기만 서술하기 때문이다. 
	이를 이용하기 위해 3차원 벡터를 (x,y,z,1)과 같은 형태의 4차원 벡터로 가정하고 연산을 진행하며 이를 동차 좌표계라고 한다.
	4차원 벡터의 w값을 0으로 설정하는 경우 이동 변환은 적용되지 않는다.
	[이동행렬]
	1 0 0 0
	0 1 0 0
	0 0 1 0 
	x y z 1

	[회전행렬]
	x축 회전		y축회전		z축회전
	1 0 0		c 0 s		c -s 0
	0 c -s		0 1 0		s c 0
	0 s c		-s 0 c		0 0 1

	[스케일행렬]
	x 0 0 0 
	0 y 0 0 
	0 0 z 0 
	0 0 0 1
	
-------------------------------------------------
	
