Q. 렌더링 파이프라인에 대해 설명하시오. 

-------------------------------------------------

Q. 렌더링 파이프라인에 대해 설명하시오. 
A. 
	1. 렌더링 파이프라인의 정의
		- 최종 화면에 출력하기 위한 일련의 처리 과정
		- 모델 좌표계의 데이터를 월드, 뷰, 투영 변환 등을 거쳐 클리핑, 래스터화, 픽셀 쉐이딩 등의 단계를 통해 최종 픽셀 색상으로 결정합니다.

	2. 렌더링 파이프라인의 주요 단계
		입력 조립 - 정점 처리 - 테셀레이션 - 기하 쉐이딩 - 레스터화 - 픽셀셰이더 - 출력병합
		총 7단계로 구성

		1) 입력 조립(Input Assembly):
			CPU에서 렌더링을 수행할 도형의 정점정보들을 정점버퍼라는 자료구조에 담아 GPU로 운반합니다. 
			정점 버퍼와 인덱스 버퍼에서 데이터를 읽어와, 버텍스의 정보를 준비하는 단계입니다.
			이 단계에서는 아직 변환이나 셰이딩은 수행되지 않으며, 단순히 데이터를 모으는 역할을 합니다.

		2) 정점 처리(Vertex Shader):
			로컬 좌표를 모든 물체들이 하나의 공간에 위치하도록 월드스페이스 좌표로 변환하고, 실제 플레이어가 바라보는 카메라가 중심이 되는 공간인 뷰 스페이스로 변환한뒤, 
			투영을 통해 투영 공간인 클립 스페이스로 변환한다. 
			= 각 정점에 대해 로컬, 월드, 뷰, 투영 변환을 적용하여 화면 좌표로 변환합니다.
			각 정점의 위치, 노멀, 텍스처 좌표 등을 계산하여 클리핑 좌표계로 변환합니다.

		3) (옵션) 테셀레이션(Tessellation):
			곡면을 더 세밀하게 표현하기 위해 정점을 더 잘게 쪼개어 디테일한 표현을 한다. 
			카메라와의 거리에 따라 디테일 의 정도를 조절하는 LOD메커니즘을 구현하여 관찰자가 가깝게 보는 부분만 세부묘사가 들어가 효율적으로 사용이 가능하다. 
			종류 : Hull Shader, Tessellator, Domain Shader

		4) (옵션) 기하 쉐이딩(Geometry Processing):
			버텍스 쉐이더에서 생성되지 않은 임의의 정점을 추가하거나 삭제하는 셰이더
			기본 도형을 다른 도형으로 확장하거나 출력하지 않을 수 있다.

		5) 래스터화(Rasterization):
			3D 프리미티브를 화면의 2D 픽셀(또는 프래그먼트)으로 변환합니다.
			클리핑, 원근 나누기, 후면 추려내기, 뷰포트 변환, 스캔 변환 등이 이루어집니다.
				A. 클리핑
					카메라의 뷰잉 볼륨 바깥에 있는 정점이나 삼각형을 제거하는 과정
				B. 원근 나누기
					클립 공간(Clip Space) 좌표의 모든 요소를 W로 나누게된다. =  NDC(Normalized Device Coordinates)좌표계
				C. 후면 추려내기
					카메라에서 볼 수 없는 "모델의 뒤쪽 면"을 제거하는 과정
				D. 뷰포트 변환
					3D NDC 공간의 물체들을 2D 스크린 공간으로 이전시키는 변환.
					(-1, 1) 범위인 XY좌표를 화면 해상도 범위로 변환 = 좌측하단 원점 0,0으로 변경
					사실 Z값은 깊이를 사용하므로 그대로 사용
				E. 스캔 변환 
					삼각형 하나가 내부에 차지하는 모든픽셀(fragment)들을 생성
					각 픽셀마다 정점 데이터들을 보간하여 할당

		6) 픽셀(Pixel Shader):
			각 프래그먼트(픽셀 후보)에 대해 최종 색상과 텍스처, 조명, 그림자 등의 색상을 입힙니다. 
			재질(Material), 조명, 그림자, 반사 등 다양한 효과를 적용하여 "최종 픽셀 색상을 결정"합니다.

		7) 출력 병합(Output Merger):
			여러 렌더 타겟을 결합하고 알파값(투명도)와 깊이값 등을 통해 픽셀끼리 경쟁하여 
			색을 정하거나 합쳐 최종적으로 화면에 그려질 픽셀을 정합니다. 
			= 알파 블렌딩, 깊이 테스트 등의 작업을 수행합니다.