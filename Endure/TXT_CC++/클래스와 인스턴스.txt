Q. 클래스와 인스턴스의 차이에 대해 설명하시오 

Q. 컴파일러 제공 특별 멤버 함수에 대해 설명하시오.

------------------------------

Q. 클래스와 인스턴스의 차이에 대해 설명하시오 
A.	클래스 : 객체를 정의하기 위한 설계도. 실체화 되지 않은 추상적인 개념
		- 프로그램 실행하면 클래스의 구조와 메서드는 코드 영역에 저장.
			(멤버함수, 가상테이블 등은 메모리에 올라옴)
		- 정적 멤버변수는 별도 데이터 영역에 할당

	인스턴스 : 클래스를 기반으로 메모리에 생성된 구체적인 객체\
		- 인스턴스를 생성하면 클래스의 정의를 참조하여 힙 또는 스택 메모리에 객체가 생성된다. 
		  Car myCar = 스택 메모리 
		  Car* myCar = 힙 메모리
	
------------------------------
Q.	컴파일러 제공 특별 멤버 함수에 대해 설명하시오.
A.	정의 : 클래스 객체 사용 시에 필수적이지만, 사용자가 정의하지 않은 경우 C++이 자동으로 정의하는 멤버 함수
	종류 : 디폴트 생성자, 소멸자, 복사생성자, (복사) 대입연산자, 이동 생성자, 이동 대입연산자

	1. 디폴트 생성자 (Default Constructor)
		역할 : 객체를 생성하고 초기화하지 않을 때 호출되는 생성자.
		컴파일러 생성 조건 : 사용자가 생성자를 정의하지 않았을 경우 자동으로 생성.

	2. 소멸자 (Destructor)
		역할 : 객체가 스코프를 벗어나거나 delete를 호출할 때 메모리 해제 등 정리 작업을 수행.
		컴파일러 생성 조건 : 사용자가 소멸자를 정의하지 않았을 경우 자동으로 생성.
	
	3. 복사 생성자 (Copy Constructor)
		역할 : 한 객체를 다른 객체로 복사할 때 호출되는 생성자.
		컴파일러 생성 조건 : 사용자가 복사 생성자를 정의하지 않았을 경우 자동으로 생성.
	
	4. 복사 할당 연산자 (Copy Assignment Operator)
		역할 : 한 객체를 다른 객체로 복사 대입할 때 호출되는 연산자.
		컴파일러 생성 조건 : 사용자가 복사 할당 연산자를 정의하지 않았을 경우 자동으로 생성.
	
	5. 이동 생성자 (Move Constructor)
		역할 : 임시 객체(소유권이 이동되는 객체)를 사용해 새 객체를 생성할 때 호출.
		컴파일러 생성 조건 : 사용자가 이동 생성자를 정의하지 않았으며, 복사 생성자와 복사 할당 연산자가 정의되어 있지 않을 경우 생성.
	
	6. 이동 할당 연산자 (Move Assignment Operator)
		역할 : 임시 객체의 자원을 기존 객체로 이동 대입할 때 호출.
		컴파일러 생성 조건 : 사용자가 이동 할당 연산자를 정의하지 않았으며, 복사 생성자와 복사 할당 연산자가 정의되어 있지 않을 경우 생성.