Q. 인터페이스에 대해 설명하시오 . 

Q. 추상기능이면 추상클래스를 쓰면 되잖아요 ?

Q. 추상클래스와 인터페이스의 차이는 무엇인가요 ?

Q. 다중상속과 다이아몬드 문제에 대해 설명해주세요 . 

Q. 다이아몬드 문제가 해결됬는데 그럼 인터페이스 말고 추상클래스 쓰면 되는거 아니에요 ?

----------------------- 가림막 

A.	인터페이스란 구현을 해야만 하는 추상적인 기능을 말합니다. 
	객체화를 할 수 없고 순수가상함수로만 이루어져있으며, 다중상속을 통해 기능을 구현하도록 할 수 있습니다. 
	[피드백] 여기에 예시를 추가해서 설명하자. 
	예를들어, IInteractable이라는 인터페이스가 있다면, 해당 인터페이스를 상속받은 문, 화단, npc의 경우 
	문이 열리거나 노래가 나오고거래를 할 수 있는 등의 기능을 함수 하나로 대체할 수 있게됩니다. 


A.	추상클래스는 순수가상함수가 1개 이상 있는 클래스로, 일반함수 역시 포함될수 있습니다. 
	이경우 구현이 되어있는 함수이기때문에 다중상속에서 다이아몬드 문제가 생길수 있습니다.  

A.	추상클래스는 순수 가상함수를 하나 이상 갖고있는 클래스입니다. 
	인스턴스를 만들수 없고 일반 메소드를 자유롭게 포함할 수 있으며 말 그대로 추상적인 형태만 제안하고 실제 구현은 자식 클래스로 미루기 위한 용도입니다. 
	그러나 인터페이스는 추상 메소드 만으로만 이루어져 있다는 차이가 있습니다. 

A.	다중상속은 둘 이상의 클래스로부터 상속을 받는것을 의미합니다. 
	다이아몬드 문제는 최상위 부모 A와 A의 자식B, A의 자식C가 있고 이 B와 C를 상속받은 D가 있을때, 
	D의 객체를 생성할 때 A의 생성자를 여러번 호출하는 문제를 의미합니다. 
	이때는 가상상속을 통해 문제를 해결하는데, 가상상속의 경우 virtual키워드를 통해 상속하는것으로 
	기존의 다중상속이 다이아몬드 문제가 생길경우 A생성자 - B생성자 - A생성자 - C생성자 - D생성자 로 호출되었다면, 
	가상상속을 통해 A생성자, B생성자, C생성자, D생성자 를 통해 호출되게 됩니다. 

A.(24.11.19) 
	추상클래스의 경우 내부에 구현된 함수가 있을경우 다중상속시 충돌이나 혼란의 문제가 생길 수 있습니다. 
	따라서 순수가상함수로만 구성된 인터페이스를 사용하는것이 더 안전합니다. 