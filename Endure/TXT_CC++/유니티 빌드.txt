Q. 유니티빌드에 대해 설명하시오 

Q. #pragma once를 하면 되는거 아닙니까 ? 
-------------------------------------------------

Q. 유니티빌드에 대해 설명하시오 
A. 유니티빌드는 컴파일 시간을 단축시키기 위한 기법 중 하나입니다.
	프로젝트 내의 여러 .cpp 파일들을 하나의 통합된 파일에 포함시켜 컴파일합니다.
	이를 통해 컴파일 과정에서 발생하는 헤더파일의 중복 포함과 컴파일 시간을 최적화 할 수 있습니다. 

	장점 : 컴파일 시간이 단축되고, 빌드 시간이 단축
	단점 : 여러 소스파일을 합치게 되어 코드의 크기가 커질 수 있습니다. 
			한글 경로가 포함될 경우 빌드가 안되는 문제가 생길 수 있습니다. 

	
-------------------------------------------------

Q.	#pragma once를 하면 되는거 아닙니까 ? 
A.	#pragma once는 헤더 파일의 중복 포함을 방지하는 전처리 지시문입니다. 
	헤더 파일을 여러 번 포함할 경우 발생하는 컴파일 오류나 중복 정의 문제를 방지하는 역할을 합니다. 
	즉, 헤더 파일의 내용이 여러 번 포함되지 않도록 하여 컴파일 오류를 예방하고, 불필요한 컴파일을 줄이는 데 기여합니다.

	그러나, 컴파일 시간을 단축하는 데는 한계가 있습니다. 
	왜냐하면 컴파일러가 각 소스 파일을 개별적으로 컴파일해야 하기 때문입니다. 
	즉, 각 .cpp 파일에 대해 독립적인 컴파일 과정이 진행되므로, 여러 개의 소스 파일이 많으면 그만큼 시간이 오래 걸릴 수 있습니다.

	유니티 빌드는 여러 개의 소스 파일을 하나로 합쳐서 컴파일하는 기법입니다. 
	이렇게 하면 컴파일러가 여러 소스 파일을 각각 컴파일하는 대신, 하나의 큰 파일을 한 번에 처리하게 되어 컴파일 시간을 단축할 수 있습니다. 
	특히 헤더 파일이 중복 포함되더라도, 유니티 빌드는 여러 소스 파일을 한 번에 처리하기 때문에 컴파일 최적화에 더 효과적입니다.

-------------------------------------------------