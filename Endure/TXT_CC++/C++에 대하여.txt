Q. 모던C++에 대해 설명하세요 

Q. C++와 JAVA의 차이에 대해 설명하세요 

Q, C, C++, C#의 차이에 대해 설명하세요 

Q. 가비지컬렉터가 있는 C#이 게임개발에 더 좋지않아요 ? 왜 C++로 개발하려고 합니까 

Q. C++와 C#의 String의 차이에 대해 설명하시오

Q. 객체 지향과 절차지향에 대해 설명하시오 

-------------------------------------------------

Q. 모던C++에 대해 설명하세요 
A.	c++11 이후의 개선된 다양한 기능에 대해 설명하는것입니다. 
	auto키워드, shared포인터, 비동기 프로그래밍, constexp, 등을 포함합니다. 
	
-------------------------------------------------

Q. C++와 JAVA의 차이에 대해 설명하세요 
A.  둘 모두 객체지향이라는 공통점이 있으나, 
	JAVA의 경우 가비지 컬렉터를 통해 자동으로 메모리를 관리하게되고 
	C++의 경우 포인터를 통해 메모리 직접관리를 지원한다. 
	
-------------------------------------------------

Q, C, C++, C#의 차이에 대해 설명하세요 
A. 	C는 저수준 언어로 기계어에 가까우며 절차 지향적인 언어로 임베디드에 사용되며 
	C++는 C에서 객체지향적인 개념을 추가한 언어로 성능과 메모리관리를 하는 분야에서 사용하게됩니다. 
	C#은 .NET 프레임워크에서 사용하는 객체지향 언어로 메모리가 자동으로 관리되며 웹 서비스와 앱개발에 주로 사용합니다. 
	
-------------------------------------------------

Q. 가비지컬렉터가 있는 C#이 게임개발에 더 좋지않아요 ? 왜 C++로 개발하려고 합니까 
A.	가비지 컬렉터가 메모리 관리를 자동으로 해주는점에서는 생산성을 높일수 있다는 장점이 있지만, 
	게임 개발에서는 실시간 성능이 매우 중요하기때문에 가비지컬렉터가 항상 적합하지 않을 수 있습니다.  

-------------------------------------------------

Q. C++와 C#의 String의 차이에 대해 설명하시오
A. 

-------------------------------------------------

Q. 객체 지향과 절차지향에 대해 설명하시오 
A. 
	1. 객체지향 프로그램이
		객체지향의 정의를 살펴보면 객체지향이란 실제 세계를 모델링하여 소프트웨어를 개발하는 방법입니다.
		이는 마치 컴퓨터 부품을 하나씩 사다가 컴퓨터를 조립하는 것과 같은 방법입니다.
		(1) 장점
			코드의 재활용성이 높음
			코딩이 절차지향보다 간편함
			디버깅이 쉬움
		(2) 단점
			처리속도가 절차지향보다 느림
			설계에 많은 시간소요가 들어감

	2. 절차지향 프로그래밍
		절차지향 프로그래밍이란 물이 위에서 아래로 흐르는 것처럼 순차적인 처리가 중요시 되며 
		프로그램 전체가 유기적으로 연결되도록 만드는 프로그래밍 기법입니다.
		함수위주로 돌아가는 논리적 코드
		(1) 장점
			컴퓨터의 처리구조와 유사해 실행속도가 빠름
		(2) 단점
			유지보수가 어려움
			실행 순서가 정해져 있으므로 코드의 순서가 바뀌면 동일한 결과를 보장하기 어려움
			디버깅이 어려움
-------------------------------------------------
