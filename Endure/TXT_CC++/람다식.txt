[질문 리스트]
Q. 람다식에 대해 설명하시오 

----------------------------------------------

Q. 람다식에 대해 설명하시오 
A.	정의 : 람다식은 익명 함수로, 이름 없이 짧은 함수 정의를 표현하는 방식입니다.
		[캡처](매개변수) -> 반환형 { 함수 본문 }

	언제 사용하는가 ? : 
	
	왜 사용하는가 ? : 
	1. 코드 간결화 
		함수 이름을 정의하지 않아도 바로 사용가능한 함수로 짧은 코드에서 편리하게 사용할 수 있다. 
	2. 변수 캡쳐 
		함수 내부에서 외부 변수를 캡처해 함수와 데이터를 결합할 수 있다. 
	3. 일회성
		한 번 쓰고 끝나는 간단한 작업에 적합합니다. 별도의 클래스를 작성하는 번거로움을 없앨 수 있습니다. 

	특징 : 
	캡처된 변수를 저장하기 위해 클로저 객체(익명 함수 객체)를 생성합니다. 
	만약 캡처 없는 람다식이라면 추가적인 멤버변수를 가진 객체는 생성되지 않고 내부적으로 단순한 함수 호출과 유사하게 동작합니다. 
	-> 클로저 객체를 생성하므로 캡처된 변수가 있는 경우 메모리를 추가로 사용합니다. 

	예시 :
	int x = 10;
	auto myLambda = [x]() { return x + 1; };

	[캡처가 있을경우 ↓ 아래와 같이 클래스처럼 변합니다. ]

	class MyLambda {
		int x; // 캡처된 변수
	public:
		MyLambda(int value) : x(value) {}
		int operator()() const {
		    return x + 1;
    }
};
