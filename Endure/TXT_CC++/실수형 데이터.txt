Q. 실수형 데이터에서 소수점 부분이 제대로 저장이 안되는 이유는?

Q. long 자료형에 대해 설명하시오 

Q. 부동 소수점을 비교할 때 정확성을 높이는 방법은?
-------------------------------------------------------

Q. 실수형 데이터에서 소수점 부분이 제대로 저장이 안되는 이유는?
A.	부동소수점 숫자는 저장을 할 때 2진수 나타내어 저장하는데, 이때 값이 완벽하게 떨어지지 않기때문에 
	제한된 비트 내에서 근사값으로 최대한 저장하려고 하다보니 0.2를 저장해야하는경우 0.199998과 같은 값이 저장되게 됩니다. 
	
-------------------------------------------------------
	
Q. long 자료형에 대해 설명하시오 
A.	정의 :  정수형 데이터 타입

	크기와 범위는 컴파일러 및 플랫폼(32비트/64비트)에 따라 다를 수 있습니다.
	32비트 시스템: long은 일반적으로 4바이트(32비트).
	64비트 시스템: long은 일반적으로 8바이트(64비트).
	
-------------------------------------------------------
	
Q.	부동 소수점을 비교할 때 정확성을 높이는 방법은?
A.	부동 소수점(floating-point) 연산은 컴퓨터에서 근사값으로 표현되기 때문에, 직접 비교(==, !=)를 사용할 경우 부정확한 결과를 초래할 수 있다.
	
	허용 오차(Epsilon) 사용
	: 두 값의 차이가 미리 정의된 허용 오차보다 작으면 같은 값으로 간주.