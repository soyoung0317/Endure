Q. 전방선언에 대해 설명하시오 

Q. 전방선언으로는 메모리공간을 할당할 수 없다고 했는데, 포인터는 왜 가능합니까? 

Q. 전방선언을 많이하면 느려집니까?
----------------------- 가림막

A. (24.11.19)
	방선언(Forward Declaration)은 컴파일러에게 특정 클래스나 함수의 존재를 미리 알려주는 방법으로, 
	이를 통해 컴파일 시간을 단축하거나 상호참조 문제를 해결할 수 있습니다. 
	
	예를 들어, 두 클래스가 서로를 참조할 때, 각각의 클래스 정의가 서로 앞에 있어야만 컴파일이 가능합니다. 
	이때 전방선언을 사용하면, 하나의 클래스가 다른 클래스를 미리 알 수 있도록 하고, 클래스 정의가 끝나지 않아도 컴파일이 가능해집니다.

	전방선언을 사용하면 구체적인 구현(즉, 클래스의 멤버 함수나 변수 등)을 알 수 없기 때문에, 해당 클래스나 함수의 정확한 호출은 불가능합니다.	
	또한, 전방선언으로는 메모리 공간 할당이 불가능한데, 전방선언으로 학생클래스를 컴파일러에게 알려주고, 매개변수로 학생클래스의 객체를 멤버로 선언하는 등의 행위가 불가능합니다. 

	다만, 학생클래스의 포인터 타입은 가능한데, 이경우 포인터는 주소값을 저장하는 변수이기때문에 어떤 크기나 멤버를 갖고있는지 중요하지 않기때문입니다. 
	다만, 해당 포인터를 참조하여 클래스 내부의 멤버변수에 접근하는 행위는 불가능합니다. .

A. (24.11.21)
	전방선언으로는 클래스의 크기나 멤버변수를 알 수 없기때문에 객체로 생성하거나 메모리 공간을 할당할수가 없는것입니다. 
	그러나 포인터의 경우 주소값만 저장하는것이기때문에 객체 자체의 메모리 공간을 할당하는것이 아니라서 그렇습니다. 

A.	아니오 전방선언을 많이하는것 자체가 컴파일 속도에 직접적인 영향을 끼치지는 않습니다. 
	구체적인 구현을 포함하지 않고 존재만을 알려주는것이기때문에 그 자체로는 성능저하를 일으키지 않습니다. 