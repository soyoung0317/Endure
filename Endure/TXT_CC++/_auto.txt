Q. auto 키워드에 대해 설명하시오 

Q. decltype에 대해 설명하시오

Q. auto 와 decltype의 차이점은 무엇인가? (declare type)

--------------------------------------------------------------------
[예시]	int x = int();		
		auto auto_x = x;		// auto_x : int형

		const int& crx = x;		// crx 는 x 를 참조하는 const int & 참조형.
		auto auto_crx1 = crs;	// auto_crx1은 int형이다. - 대입받아 형을 결정할때 const와 &를 떼버린다. 
		const auto& auto_crx2 = crx; // auto에도 const와 &를 붙여줘야 const int&가 된다. 

A. 	변수의 초기화 값에 따라 변수의 자료형을 자동으로 결정하는 역할을 합니다.
	반환형식과 같은곳에 사용할 수 있으며 매개변수로 사용이 불가능하고, 구조체나 클래스 등의 멤버변수로 쓰일 수 없다. (-> 객체의 자료형의 크기를 정할 수 없기 떄문이다.)
	대입을 통해 형을 결정할 때 const와 &를 떼어버릴 수 있어 주의가 필요하다. 
	범위기반 for문에서 반복자를 명시적으로 선언하는 대신 auto를 사용해 보다 간결하게 표현할 수 있습니다. 
	
--------------------------------------------------------------------

A. decltype 정확한 자료형을 알아내기 위해 사용하는 키워드로 변수의 타입을 그대로 추론하는 역할을 합니다. 


--------------------------------------------------------------------
[예시]	int x = 10;
		const int& ref = x;

		auto a = ref;       // a는 int 타입 (ref의 값을 복사함)
		decltype(ref) b = x; // b는 const int& 타입 (ref의 정확한 형식을 유지)

A.  aut	ㅁㄴo 는 초기화 값에 따라 변수의 자료형을 추론하는 키워드이고, 
	decltype은 정확한 자료형을 알아내기 위해 사용하는 키워드로, auto와 비슷하지만 동작방식이 다릅니다. 

	decltype은 단순히 이 변수나 표현식의 자료형이 무엇인지를 물어보는 역할로 초기값이 없어도 사용이 가능하다.


