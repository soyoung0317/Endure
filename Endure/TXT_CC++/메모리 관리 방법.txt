Q. C++에서 메모리 관리 방법(스택 vs 힙) 설명

-------------------------------------------------
Q. C++에서 메모리 관리 방법(스택 vs 힙) 설명
A.
	1. 정의
		C++에서 메모리는 크게 스택(Stack)과 힙(Heap) 두 영역으로 나뉘어 관리된다.
		스택은 함수 호출 시 지역 변수들을 저장하는 메모리 영역으로, 자동으로 할당되고 해제된다.
		힙은 프로그래머가 직접 동적 할당(new/delete)하는 메모리 영역으로, 크기가 크고 유연하지만 수동으로 관리해야 한다.

	2. 왜 사용하는가
		스택은 자동 관리와 빠른 접근 속도로 함수 내 임시 데이터를 저장하는 데 적합하다. 
		힙은 프로그램 실행 중에 크기가 변하거나 생명주기가 불확실한 데이터를 저장할 때 사용한다. 
		즉, 동적으로 필요한 메모리를 유연하게 할당하기 위해 힙을 사용한다.

	3. 메모리 관리
		(1) 스택 메모리 관리
			스택은 함수가 호출될 때 컴파일러가 자동으로 필요한 공간을 할당하고, 함수 종료 시 자동으로 해제된다. 프로그래머가 따로 관리할 필요가 없다.
			즉, 지역 변수나 함수 내 임시 변수는 스택에 자동 배치되고, 생명주기가 함수 실행 범위로 한정된다.
			초기엔 높은 메모리 주소에 위치해 있다가, 함수가 호출되면서 지역 변수나 호출 정보를 위해 메모리가 필요하면 주소가 낮은 쪽으로 감소하면서 공간이 할당된다.

		(2) 힙 메모리 관리
			힙은 프로그래머가 명시적으로 메모리를 할당하고 해제해야 한다. new 연산자로 메모리를 할당하고, delete로 반드시 해제해야 한다.
			메모리 누수를 막기 위해 할당한 메모리를 꼭 해제해야 하며, 여러 곳에서 공유하는 경우 스마트포인터(std::unique_ptr, std::shared_ptr) 같은 
			RAII 기법을 쓰면 안전하게 관리할 수 있다.
			낮은 주소에서 높은 주소 방향으로 메모리가 할당되는 경우가 많다.