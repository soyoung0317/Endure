Q. 시퀀스 컨테이너로서의 std::string에 대해 설명하시오 

-------------------------------------------------------

Q. 시퀀스 컨테이너로서의 std::string에 대해 설명하시오 
A.
	1. 정의
		시퀀스 컨테이너는 내부적으로 데이터를 순서대로 나열하여 저장하는 자료구조입니다.
		std::string은 문자(char) 타입을 원소로 하는 시퀀스 컨테이너이며, 동적 크기 조절이 가능합니다.

	2. 왜 시퀀스 컨테이너인가?
		시퀀스 컨테이너는 데이터가 순차적으로 저장되어 있기 때문에, 인덱스를 통한 접근이 빠르고 직관적입니다.
		std::string도 내부적으로 문자 배열을 동적으로 관리하며, 연속적인 메모리에 저장되어 있어 포인터 연산이나 인덱싱이 가능합니다.
		그래서 반복자(iterator)를 사용해서 순차 탐색도 쉽게 할 수 있습니다.

	3. 특징
		string은 시퀀스 컨테이너이면서도 내부적으로 메모리 최적화(예: Small String Optimization; SSO)를 하기도 해서, 짧은 문자열은 별도의 메모리 할당 없이 빠르게 처리합니다.
		vector<char>와 비슷하지만, 문자열 조작에 특화된 API가 많아 게임 개발 시 텍스트 처리에 주로 사용됩니다.
		
		(1) 장점
			동적 크기 조절로 문자열 길이에 맞게 메모리를 자동 관리함
			인덱스 접근과 반복자를 통한 순차 접근 가능 
			다양한 문자열 조작 메서드 내장 (append, insert, erase 등)

		(2) 단점
			내부 복사와 재할당 시 성능 저하 가능성 있음
			큰 문자열 조작 시 메모리 할당 비용 존재
			메모리 단편화나 불필요한 복사 주의 필요
