
Q. stack과 queue는 무엇이며 언제 사용되는가?

Q. 데크(deque)에 대해 설명해주세요 

Q. 우선 순위 큐에대해 설명하고 언제 사용되는지 설명하시오.

-------------------------------------------------

Q.	stack과 queue는 무엇이며 언제 사용되는가?
A.	스택은 LIFO의 방식으로 작동하는 데이터 구조입니다. 
	마지막에 삽입된 데이터가 먼저 삭제되는 구조로, 삽입과 삭제가 한쪽끝에서만 이루어집니다. 
	삽입과 삭제는 모두 o(1)의 시간복잡도를 갖고, 검색의 경우 O(n)의 시간복잡도를 갖습니다. 
	최근 데이터를 먼저 처리해야할 때 유용한데, 주로 함수 호출스택에서 사용됩니다. 
	예를들어, main함수가 호출되고, 여기에 있는 A함수, A함수 내부의 B함수, B함수 내부의 C함수가 호출된다면, 
	종료시 스택에서 제거되는 순서는 C - B - A - main이 됩니다. 
	또는 방문페이지를 스택에 저장하여 마우스에서 뒤로 돌아가기 퀵버튼을 누르면 가장최근 페이지부터 돌아가게되는것


	큐는 FIFO의 방식으로 작동하는 데이터 구조입니다. 
	먼저들어온 데이터가 먼저 나가는 구조로, 삽입(push)의 경우 큐의 뒤에서 추가되며, 
	삭제(pop)의경우 가장앞(front)에서 값을 삭제합니다. 
	데이터가 삽입된 순서를 유지한다는 특징이 있으며, 삽입과 삭제 모두 O(1)의 시간복잡도를 갖고 탐색이나 정렬이 필요하지 않습니다. 

	예를들어, 로그처리 시스템이 있다고 할때, 로그는 순차적으로 생성되어 큐에 들어가 처리되게됩니다. 
	
-------------------------------------------------

Q.	데크(deque)에 대해 설명해주세요 
A.	데크는 양쪽에서 삽입과 삭제가 모두 가능한 선형 데이터 구조를 말합니다. 
	앞과 뒤 모두에서 삽입과 삭제가 가능하고 O(1)의 시간복잡도를 갖습니다. 
	중간 삽입 삭제의경우 O(n)의 시간복잡도를 갖습니다. 
	데이터를 재배열하지 않고 블록을 추가/삭제하거나 포인터만 업데이트 하면된다는 장점이 있습니다. 

	다만, 연속적인 메모리 공간을 사용하지 않기때문에 데이터 접근이 두번의 레퍼런스를 거쳐야 해서 느릴 수 있으며, 
	추가적인 컨트롤과 포인터 관리로 인해 메모리 효율이 떨어질 수 있습니다. 
	
-------------------------------------------------

Q.	우선 순위 큐에대해 설명하고 언제 사용되는지 설명하시오.
A.	우선순위 큐는 들어온 순서대로가 아니라 우선순위에 따라 처리되는 자료구조입니다. 
	각 요소마다 우선순위값을 갖고 있으며, 우선순위가 높은 요소가 먼저 처리되게 됩니다. 
	따라서 삽입과 삭제 모두 O(logN)의 시간복잡도를 갖고 있습니다. 
	우선순위 기반이기때문에 중요한 작업을 먼저 처리할 수 있다는 장점이 있지만 
	모든 요소가 정렬된 형태로 저장되지 않는다는 단점이 있습니다. 
	예를들어, 프로세스 스케줄링에서 사용하게됩니다. 
	각 프로세스에 우선순위를 부여하여 CPU시간을 할당하고 우선순위가 높은 프로세스가 먼저 실행되게 됩니다. 
	

[stack 예시 상황]	
void A() {
B();
}
void B() {
    C();
}
void C() {
}

int main() {
    A();
    return 0;
}
