Q. map에 대해 설명해주세요 

Q. map에서 정렬을 하는 이유는 무엇인가 ?

Q. map과 unordered_map의 차이점은 무엇이고, 사용사례에 따라 어떤 컨테이너를 선택해야 하는지 설명하라.

Q. map vs unordered_map 에서 왜 map을 선호하는가 ?
-------------------------------------------------

Q.	map에 대해 설명해주세요 
A.	map은 키와 value(값)의 쌍으로 저장된 연관 컨테이너로, 각키는 고유한 값을 가지며 이를 통해 빠르게 검색할 수 있습니다. 
	first와 second의 pair객체로 저장되며 first로 key, second로 value를 저장합니다. 
	map은 자료를 저장할때 내부에서 자동으로 정렬이 이루어지는데 key값을 기준으로 오름차순으로 자동 정렬됩니다. 
	map의경우 임의접근이 불가능하고 검색, 삽입, 삭제 모두 O(logN)의 시간복잡도를 갖습니다. 

	(이진탐색트리는 다음에 - 레드블랙트리 .. 아직잘.. )
	
-------------------------------------------------

Q. map에서 정렬을 하는 이유는 무엇인가 ?
A. 트리구조를 갖고있기떄문에 한쪽으로 쏠림을 방지하기 위해 정렬을 한다. 

-------------------------------------------------

Q.	map과 unordered_map의 차이점은 무엇이고, 사용사례에 따라 어떤 컨테이너를 선택해야 하는지 설명하라.
A.	map의경우 key값이 반드시 고유해야하고 내부적으로 오름차순으로 정렬되고 
	삽입, 삭제, 검색이 모두 O(logN)의 시간복잡도를 가집니다.
	예를들어, 프로젝트에서 플레이어의 무기를 관리할때 사용했는데, 
	플레이어가 여러개의 무기를 들고있었고, 해당 무기를 string과 객체로 관리하여 플레이어가 무기를 스위칭할때마다 객체를 빠르게 조회할 수 있었습니다. 

	unordered_map의경우 해시테이블로 구현되어 키값이 정렬되지 않습니다. 
	삽입, 삭제, 검색이 평균적으로 O(1)의 시간복잡도를 가지지만 해시충돌이 일어날경우 O(n)이 될 수 있습니다. 
	예를들어, 프로젝트에서 게임내 블랙보드 관리에서 사용했는데, 
	플레이어가 몬스터를 공격하게되면 해당 몬스터의 이름과 현재 hp를 블랙보드에 업로드 하게됩니다. 
	UI의경우 블랙보드에 업데이트된 값을 확인하고 UI와 연동하여 몬스터마다 머리 위에 HP바가 뜨는게 아니라 
	UI로 최상단에 가장 최근에 충돌한 몬스터의 이름과 HP를 띄우게 하였습니다. 
	-> 실시간으로 데이터가 자주 업데이트되기때문에 해시테이블을 통해 빠르게 처리하기위함입니다. 
	
-------------------------------------------------
Q.	map vs unordered_map 에서 왜 map을 선호하는가 ?
A.	unordered_map의경우, 해시기반의 자료구조이기때문에 추가적인 메모리를 사용한다는 특징이 있습니다. 
	따라서, 메모리적인 관리가 필요한 경우 map을 선호하는 경향이 있습니다. 
	
-------------------------------------------------