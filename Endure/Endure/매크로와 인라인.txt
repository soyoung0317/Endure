Q. 매크로에 대해 설명하시오 

Q. 인라인에 대해 설명하시오

----------------------- 가림막

A. (24.11.21)
	매크로는 컴파일 전에 텍스트치환으로 사용되는 기능으로 주로 전처리기에서 사용되며, 상수매크로와 함수매크로로 나누어집니다. 
	상수매크로의 경우, 매크로 확장 문자열로 치환을 하는것이고, 
	함수매크로의 경우 전달인자의 형태를 고려해서 치환하는 동작을 하는것입니다. 

	가독성이 좋아지고 코드의 중복을 줄이며 컴파일타임에 처리되므로 실행성능에 영향을 미치지 않는다는 장점이 있으나  
	전처리 과정에서 치환되므로 메모리공간에 할당되지 않아서 주소접근이 불가능하고 디버깅이 어렵다는 단점이 있습니다. 
	
	저의경우, 프로젝트 내에서 ANIM_FILE_PATH 그리고 NONE_ANIM_FILE_PATH 와 같이 경로를 매크로로 치환하여 파일디렉토리 순회를 통해 한번에 로드가 가능하도록 하였습니다. 

A. (24.11.21)
	인라인은 함수앞에 inline키워드를 사용하여 선언하는데, 이렇게 정의된 함수는 컴파일러에게 코드를 치환할것을 요청하게됩니다. 
	만약 add라는 함수가 인라인으로 되어있다면, 이 함수는 호출될때마다 add(a, b)가 아니라 a + b로 대체되어 함수 호출의 오버헤드를 줄일 수 있다는 장점이 있습니다. 
	그러나, 디버깅을 통한 추적이 어렵고, inline키워드를 사용하더라도 컴파일러가 처리하지 않는 경우가 생깁니다. 
	예를들어, 함수의 크기가 너무 크거나 복잡한경우, 재귀함수인경우 무한반복에 빠지고, 다른 소스파일에 정의한경우 등이 있습니다. 

