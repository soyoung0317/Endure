[질문 리스트]
Q. 메모리 계층구조에 대해 설명하시오 

Q. 메모리 구조에 대해 설명하시오

Q. 캐시 메모리 내부 레벨에 대해 설명하시오

Q. 각 메모리별 속도 

Q. 게임 개발에서 캐시 메모리가 중요한 이유에 대해 설명하시오

-------------------------------------------------
Q.	메모리 계층구조에 대해 설명하시오 
A.	[ 메모리 계층구조 정의 ]
	: 다양한 종류의 메모리를 계층적으로 배열하여 성능, 비용, 용량 등을 최적화하는 설계 방식.
	: 컴퓨터 시스템에서 데이터를 저장하고 액세스하는 메모리들이 성능, 크기, 비용에 따라 계층적으로 구성된 구조
	: 레지스터, 캐시메모리, 메인 메모리, 보조저장장치 등으로 구성되어있다. 

	[ 왜 사용하는가? ]
		1. 속도-비용 트레이드오프
			: 빠른 메모리는 비용이 비싸고 용량이 작고 느린 메모리는 비용이 저렴하고 용량이 크다.
		2. 효율적인 데이터 접근
			: 자주 사용하는 데이터를 빠른 메모리에 저장하여 성능을 극대화하고, 덜 사용하는 데이터를 느린 메모리에 저장합니다.

	[ 구성요소 ]
		1. 레지스터 (Registers)
			특징: CPU가 연산을 수행할 때 직접 접근하여 데이터를 처리하는 가장 기본적인 저장소.
			위치: CPU 내부에 직접 통합되어 있습니다.
			용량: 일반적으로 수십 개의 레지스터만 존재하며, 각 레지스터의 크기는 32비트, 64비트 등으로 고정되어 있습니다.
			용도: 현재 실행 중인 명령어의 연산에 필요한 데이터나 주소를 일시적으로 저장.
			속도: CPU 클럭과 동일한 속도로 동작, 지연 시간이 극히 짧음.

		2. 캐시 메모리 (Cache Memory)
			특징: CPU와 주 메모리(RAM) 사이에 위치하며, 고속의 SRAM으로 구성됩니다.
			위치: CPU 내부에 통합되어 있으며, 여러 계층으로 나뉘어 CPU 코어와 공유됩니다.
			계층:
				L1 캐시: 가장 빠르고 용량이 작으며, CPU 코어마다 개별적으로 존재.
				L2 캐시: L1보다는 느리지만, 더 큰 용량을 가짐. 일부 시스템에서는 CPU 코어마다 또는 여러 코어가 공유.
				L3 캐시: L2보다 더 큰 용량을 가지며, 주로 다중 코어 CPU에서 모든 코어가 공유.
			용도: 자주 접근하는 데이터나 명령어를 저장하여 CPU의 데이터 접근 속도를 향상.
			속도: 레지스터보다는 느리지만 주 메모리보다는 훨씬 빠름.

		3. 주 메모리 (Main Memory/RAM)
			특징: 컴퓨터의 주 작업 공간으로, 주로 DRAM으로 구성됩니다.
			용량: 수 기가바이트(GB)에서 수십 기가바이트에 이르름.
			용도: 실행 중인 프로그램과 현재 사용 중인 데이터 저장.
			속도: 캐시보다는 느리지만, 여전히 매우 빠름. 접근 시간은 나노초(ns) 단위.
			특징: 휘발성 메모리로, 전원이 꺼지면 데이터가 사라짐.
		4. 보조 저장장치 (Secondary Storage)
			종류:
			SSD (Solid State Drive): 플래시 메모리를 사용하여 빠른 속도와 높은 내구성을 제공.
			HDD (Hard Disk Drive): 자기 디스크를 회전시켜 데이터를 읽고 쓰는 방식으로, 용량 대비 저렴한 비용이 특징.
			용량: 수백 기가바이트(GB)에서 수 테라바이트(TB)까지.
			용도: 장기적인 데이터 저장, 프로그램 및 파일 보관.
			속도: SSD가 HDD보다 훨씬 빠름. 접근 시간은 밀리초(ms) 단위.
		
-------------------------------------------------

Q.	메모리 구조에 대해 설명하시오
A.	[ 메모리 정의 ]
	: 프로그램 실행 중 데이터를 저장하고 관리하는 공간

	[ 메모리 구조의 구성 ]
		1. 코드영역
			역할 : 프로그램의 실행 명령어(코드)가 저장되는 영역
			특징 : 읽기 전용
			저장 데이터 : 함수정의, 컴파일 명령어 등 
		2. 데이터 영역
			역할 : 프로그램이 시작될 때 생성되며, 전역 변수와 정적 변수를 저장. = 런타임
			특징 : 프로그램이 종료될 때까지 메모리에 유지.
			저장 데이터 : 전역 변수와 정적 변수.
		3. 힙 영역
			역할 : 프로그램 실행 중 동적으로 할당되는 메모리를 저장.
			특징 : 개발자가 명시적으로 할당(new, malloc)과 해제(delete, free)를 관리.
				런타임에 크기가 결정된다. 
			저장 데이터 : 동적으로 할당
		4. 스택 영역
			역할 : 함수 호출 시 생성되는 지역 변수와 함수 호출 정보를 저장.
			특징 : 함수 호출 시 자동으로 메모리 할당, 함수 종료 시 자동으로 해제.
				크기가 제한적이며, 초과 시 스택 오버플로우(Stack Overflow) 발생.
				컴파일 타임에 크기가 결정된다. 
			저장 데이터 : 지역 변수, 함수의 호출 정보(스택프레임) 등
			
-------------------------------------------------

Q. 캐시 메모리 내부 레벨에 대해 설명하시오
A. 캐시 메모리(L1, L2, L3)는 CPU 성능을 최적화하기 위해 다양한 속도와 용량을 가진 여러 계층으로 구성됩니다

	1. L1 캐시 (Level 1 Cache)
		역할: CPU가 가장 자주 사용하는 데이터와 명령어를 저장하여 빠른 접근을 가능하게 함.
		위치: 각 CPU 코어 내부에 개별적으로 통합되어 있습니다.
		용량: 매우 작음 (보통 16KB ~ 128KB).
		속도: 가장 빠름. CPU 클럭과 거의 동일한 속도로 동작.
		구조:
			L1 데이터 캐시 (L1 Data Cache): 데이터 접근을 담당.
			L1 명령어 캐시 (L1 Instruction Cache): 명령어 접근을 담당.
		공유 여부: 개별 코어 전용. 각 코어마다 독립적으로 존재하여 다른 코어와 공유되지 않습니다.

	2. L2 캐시 (Level 2 Cache)
		역할: L1 캐시에 저장되지 않은 데이터를 보조적으로 저장하여, 더 많은 데이터를 빠르게 접근할 수 있게 함.
		위치:
			개별 L2 캐시: 일부 CPU 아키텍처에서는 각 코어마다 독립적인 L2 캐시를 가집니다.
			공유 L2 캐시: 다른 아키텍처에서는 두 개 이상의 코어가 하나의 L2 캐시를 공유하기도 합니다.
		용량: L1보다 큼 (보통 256KB ~ 1MB).
		속도: L1보다는 느리지만 여전히 매우 빠름.
		공유 여부:
		일반적 구조: 대부분의 현대 CPU에서는 각 코어가 개별적인 L2 캐시를 가집니다.
		예외: 일부 다중 코어 CPU에서는 L2 캐시를 여러 코어가 공유할 수 있습니다.

	3. L3 캐시 (Level 3 Cache)
		역할: 여러 코어 간에 데이터를 공유하고, 전체 시스템의 메모리 접근을 최적화함. 
				또한, 코어 간의 캐시 일관성을 유지하는 데 도움을 줌.
		위치: 주로 CPU 칩 내부에 통합되어 있지만, 여러 코어가 공유하는 형태로 설계됨.
		용량: 가장 큼 (보통 2MB ~ 수십 MB).
		속도: L1 및 L2 캐시보다 느리지만, 여전히 메인 메모리보다 빠름.
		공유 여부: 모든 코어가 공유. 다중 코어 CPU에서 모든 코어가 하나의 L3 캐시를 공유하는 경우가 대부분입니다.

-------------------------------------------------
Q.	각 메모리별 속도 
A.	코드영역 > 스택영역 > 데이터 영역 > 힙영역
	
	코드 영역		가장 빠름		레지스터와 유사 (1~2 나노초)			CPU는 실행 중인 명령어를 직접 캐시나 레지스터에 적재하여 실행.
	스택 영역		빠름				RAM 접근 속도 (50~100 나노초)			스택은 함수 호출/지역 변수 처리에 최적화된 메모리 관리 구조를 가지며, CPU와 가까움.
	데이터 영역		중간 속도		RAM 접근 속도 (50~100 나노초)			전역 변수와 정적 변수가 저장되며, 크기가 고정되어 효율적이나 코드 영역보다 느림.
	힙 영역			느림				RAM보다 약간 느림 (100~200 나노초)	동적 메모리 할당 및 해제를 관리하는 비용이 추가되어 스택보다 느림.
	
-------------------------------------------------

Q.	게임 개발에서 캐시 메모리가 중요한 이유에 대해 설명하시오
A.	캐시 메모리는 성능 최적화와 사용자 경험 향상에 중요한 역할을 합니다
	캐시 메모리는 CPU와 주 메모리(RAM) 간의 속도 차이를 줄여 데이터 접근 시간을 단축시키며, 
	이는 게임의 전반적인 성능과 반응성에 직접적인 영향을 미칩니다.
	게임은 실시간으로 수많은 데이터와 연산을 처리해야 합니다. 캐시 메모리는 자주 사용하는 데이터와 명령어를 저장하여 CPU가 이를 빠르게 접근할 수 있게 합니다
