Q. 메모리 풀에 대해 설명하시오.


---------------------------

Q. 메모리 풀에 대해 설명하시오.
A. 1. 정의
	 특정 용도나 객체를 위해 미리 일정 크기의 메모리를 할당해 두고, 필요한 시점에 빠르게 할당하고 사용이 끝나면 반납하는 기법

	 2. 특징
		1) 사전 할당(Pre-allocation)
			프로그램 시작 시점 또는 특정 시점에, 필요한 만큼의 메모리를 큰 덩어리로 미리 확보해 놓습니다.

		2) 빠른 할당/해제
			동적 할당이 필요해질 때마다 이미 확보해 둔 풀 내에서 즉시 할당해주므로, 일반적인 malloc보다 속도가 빠르고 예측 가능합니다.

	 3. 장단점
	 장점 : 
		1) 할당/해제 오버헤드 감소
			메모리 풀은 미리 확보해둔 공간에서 단순한 인덱스 조작이나 프리 리스트(Free List) 관리만으로 
			할당/해제를 처리할 수 있어 속도가 매우 빠르고 오버헤드가 적습니다.
		2) 단편화(Fragmentation) 완화
			풀 내부에서 객체가 할당되고 해제되어도, 풀 외부의 메모리 레이아웃에 직접 영향을 주지 않습니다.
		3) 반복 사용되는 객체
			네트워크 패킷 버퍼, 데이터베이스 커넥션, 게임 오브젝트 등 반복적으로 생성/소멸되는 객체는 메모리 풀로 관리하면 효율이 높아집니다.
	  
	  단점 : 
		1) 초기 메모리 할당 비용
			미리 큰 덩어리를 잡아두면, 그만큼 초기 메모리를 점유합니다. 실제로는 쓰지 않는 공간이 있을 수도 있습니다(낭비).
		2) 유연성 낮음
			고정 크기 풀은 이보다 큰 객체를 배정할 수 없고, 가변 크기로 관리해도 일반 동적 할당만큼 유연하긴 어렵습니다.