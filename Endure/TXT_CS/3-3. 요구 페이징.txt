Q. 요구 페이징에 대해 설명하시오. 

Q. 일반적인 페이징과 요구페이징의 차이는?
(요구 페이징이란 게 결국 필요한 페이지만 메모리에 올리는 거라면, 일반적인 페이징 기법에서도 페이지 교체가 일어나는데 그게 요구 페이징이랑 뭐가 다른 거냐?)

-------------------------------------------------

Q.	요구 페이징에 대해 설명하시오. 
A.  
	1. 정의
		요구 페이징은 프로세스 실행 시 처음부터 모든 페이지를 메모리에 올리는 것이 아니라,
		필요한 페이지가 요청될 때만 페이지를 메모리에 적재하는 방식입니다.
		
	2. 동작 원리
		프로그램 실행 시 전체 페이지 중 일부만 메모리에 로드합니다.
		CPU가 아직 메모리에 없는 페이지에 접근하면 페이지 폴트(Page Fault)가 발생합니다.
		운영체제는 디스크에서 해당 페이지를 가져와 메모리에 적재한 후, 다시 해당 명령을 실행합니다.
		이 과정은 사용자에게 투명하게 처리됩니다.
		
	3. 특징
		(1) 장점
			메모리 사용 효율 증가: 필요한 페이지만 적재하므로 메모리 낭비가 적습니다.
			빠른 시작 속도: 전체 프로그램을 메모리에 올릴 필요가 없어, 초기 로딩 시간이 짧습니다.
			다중 프로세스에 유리: 많은 프로세스가 동시에 실행 가능.
		
		(2) 단점
			페이지 폴트가 자주 발생하면 성능 저하(페이지 폴트 비용)
			초기 실행 시 약간의 지연 발생

-------------------------------------------------

Q. 일반적인 페이징과 요구페이징의 차이는?
A.
	요구 페이징(Demand Paging)**은 처음부터 메모리에 아무 페이지도 올리지 않고,
	실제로 필요한 시점에만 페이지를 점진적으로 로드하는 전략입니다
	
	반면 일반적인 페이징에서는 프로세스 시작 시 일부 또는 전체 페이지를 미리 메모리에 로드한 뒤,
	필요에 따라 교체 정책에 의해 일부를 교체하는 방식입니다.

	예를 들어 100페이지짜리 프로그램이 있을 때:
		일반 페이징: 실행 시 처음 20~30개 페이지는 미리 메모리에 올림. 이후 페이지 폴트 발생 시 교체.
		요구 페이징: 실행 시 단 하나의 페이지도 안 올리고 시작. CPU가 첫 명령어 접근할 때 페이지 폴트 발생 → 해당 페이지만 로드. 이후도 마찬가지.

-------------------------------------------------