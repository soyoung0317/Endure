Q.	컨텍스트 스위칭에 대해 설명하시오 . 

Q.	프로세스 컨텍스트 스위칭과 쓰레드 컨텍스트 스위칭의 차이점에 대해 설명하시오 

-------------------------------------------------
Q.	컨텍스트 스위칭에 대해 설명하시오 . 

A.	1. 정의
		운영체제(OS)가 현재 실행 중인 프로세스나 쓰레드의 상태(Context)를 저장하고, 다른 프로세스나 쓰레드의 상태를 불러와 CPU를 할당하는 과정을 말합니다
		이를 통해 효율적으로 작업을 관리할 수 있습니다.

		커널에 의해 컨텍스트 스위칭이 실행된다. <<< 

	2. 컨텍스트 스위칭의 동작 과정
		a. 프로세스 컨텍스트 스위칭
			1] 컨텍스트 스위칭 발생 / 커널모드 진입
				현재 실행 중인 프로세스1의 CPU 상태(레지스터, 프로그램 카운터 등)를 PCB(Process Control Block)에 저장합니다.
				다음 실행할 프로세스2의 CPU 상태를 PCB에서 로딩합니다.
			2] MMU 설정 및 TLB 플러시
				MMU가 프로세스2의 가상 메모리 공간을 바라보도록 설정합니다.
				TLB를 비워서 새로운 프로세스2의 페이지 테이블을 다시 로드하도록 합니다.
			3] 커널모드 종료 및 유저모드 전환
				커널 모드에서 유저 모드로 전환하여 프로세스2의 실행을 시작합니다.
			4] 프로세스2 수행
				프로세스2가 CPU에서 실행됩니다.
			
		b. 쓰레드 컨텍스트 스위칭
			1] 컨텍스트 스위칭 발생 / 커널모드 진입
				현재 실행 중인 쓰레드1의 CPU 상태(레지스터, 프로그램 카운터 등)를 TCB(Thread Control Block)에 저장합니다.
				다음 실행할 쓰레드2의 CPU 상태를 TCB에서 로딩합니다.
			2] 커널모드 종료 및 유저모드 전환
				커널 모드에서 유저 모드로 전환하여 쓰레드2의 실행을 시작합니다.
			3] 쓰레드2 수행
				쓰레드2가 CPU에서 실행됩니다.
			
	3. 장단점
		a. 장점
			멀티태스킹 구현: 여러 프로세스나 쓰레드가 동시에 실행되는 것처럼 보이게 하여, 시스템의 자원 활용을 극대화합니다.
			응답성 향상: 사용자 인터페이스의 응답성을 높이고, 실시간 작업의 우선순위를 관리할 수 있습니다.
			자원 격리: 프로세스 간의 자원을 격리하여, 한 프로세스의 오류가 다른 프로세스에 영향을 미치지 않도록 합니다.
		b. 단점
			오버헤드 발생: 컨텍스트 스위칭 자체에도 시간이 소요되며, 이로 인해 CPU 자원의 일부가 낭비됩니다.
			캐시 성능 저하: 프로세스 전환 시 캐시 미스(Cache Miss)가 발생하여, 메모리 접근 시간이 증가할 수 있습니다.
			복잡성 증가: 동기화 문제, 데드락(Deadlock), 레이스 컨디션(Race Condition) 등의 문제가 발생할 수 있습니다.
-------------------------------------------------


Q. 프로세스 컨텍스트 스위칭과 쓰레드 컨텍스트 스위칭의 차이점에 대해 설명하시오 
A.	공통점
		1. 커널모드에서 실행한다. 
		2. CPU의 레지스터 상태를 교체 
	차이점
		1. 프로세스 컨텍스트 스위칭은 가상 메모리 주소 관련 처리를 추가로 수행한다. 
			= MMU, TLB  