Q. Gimbal Lock(짐벌락) 문제 대해 설명하시오 

Q. Rodrigues rotation에 대해 설명하시오 

-------------------------------------------------

Q. Gimbal Lock(짐벌락) 문제 대해 설명하시오 
A.
	1. 정의
		짐벌락(Gimbal Lock)은 오일러 각을 사용한 회전 표현에서 특정한 회전 상태에서 두 개의 회전 축이 겹쳐지면서 자유도를 잃는 현상을 의미한다.
		즉, 3D 공간에서 물체를 회전할 때 원래 3개의 독립적인 회전 축이 2개로 줄어들어, 특정 방향의 회전이 불가능해지는 문제가 발생한다.

	2. Gimbal Lock 발생 원리
		오일러 각(Euler Angle)은 XYZ 축을 기준으로 일정한 순서로 회전하는 방식이다.
		하지만 Pitch(피치, X축 회전)이 ±90°에 도달하면 Yaw(요)와 Roll(롤) 축이 동일한 방향을 바라보게 된다.
		이 경우 하나의 축이 사라진 것과 같은 효과가 발생하여, 한 방향으로의 회전이 불가능해진다.
		이 현상을 Gimbal Lock이라고 한다.
		
	3. 5. Gimbal Lock 해결 방법
		(1) 쿼터니언(Quaternion) 사용
		쿼터니언은 4차원(4D) 회전을 표현하는 방식으로, 회전 순서에 관계없이 부드러운 회전을 제공한다.
		Gimbal Lock이 발생하지 않음 → 게임 & 그래픽에서 일반적으로 사용됨.
		
		(2) 회전 행렬(Rotation Matrix) 사용
		회전을 행렬 연산으로 표현하면, 오일러 각의 회전 순서에 영향을 받지 않음.
		단, 행렬 계산이 복잡하고 메모리 사용량 증가 가능.
		
		(3) Tait-Bryan 각 또는 Axis-Angle 사용
		회전 축을 명확히 지정하는 Axis-Angle 방식을 사용하면 Gimbal Lock을 피할 수 있음.
		= Rodriguess rotation 
		
-------------------------------------------------

Q. Rodrigues rotation에 대해 설명하시오 
A.	특정한 회전(소규모 회전)에서는 효과적이지만, 연속 회전에는 쿼터니언이 더 적합

	1. 정의
		Rodrigues 회전 공식은 축-각(axis-angle) 회전 표현을 사용하여 3D 공간에서 벡터를 특정 회전축(𝑘)과 각도(𝜃)만으로 회전시키는 방법이다.
		즉, 주어진 회전축을 중심으로 벡터를 회전시키는 수식을 제공한다.
		회전 행렬을 직접 계산하는 것보다 효율적이며, 쿼터니언을 사용하지 않고도 회전을 구현할 수 있다.
		특히 소규모 회전(작은 각도 회전)에서 직관적이며 계산량이 적어 빠르다.

		: 짐벌락을 해결하는 솔루션중 하나.
 		: 평면에 점P가 있고, 해당 P를 θ만큼 이동한 P'을 어떻게 구할것인가 = 같은평면에 P와 P'이 존재하기때문에 원점으로부터 거리가 같다. 
		vrot = vcosθ + (k×v)sinθ + k(k⋅v)(1−cosθ)

-------------------------------------------------